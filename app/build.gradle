apply plugin: 'com.android.application'
apply plugin: 'com.jaredsburrows.license'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    def getGitHash = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-parse', '--short', 'HEAD'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }

    // Try reading secrets from file
    def secretsPropertiesFile = rootProject.file("secrets.properties")
    def secretProperties = new Properties()

    if (secretsPropertiesFile.exists()) {
        secretProperties.load(new FileInputStream(secretsPropertiesFile))
    }
    // Otherwise read from environment variables, this happens in CI
    else {
        secretProperties.setProperty("signing_keystore_location", "${System.getenv('signing_keystore_location')}")
        secretProperties.setProperty("signing_keystore_password", "${System.getenv('signing_keystore_password')}")
        secretProperties.setProperty("signing_key_alias", "${System.getenv('signing_key_alias')}")
        secretProperties.setProperty("signing_key_password", "${System.getenv('signing_key_password')}")
    }


    compileSdkVersion 29
    defaultConfig {
        applicationId "cz.vitskalicky.lepsirozvrh"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 19
        versionName "1.7.3"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "GitHash", "\"${getGitHash()}\""
        /**
         * Whether to allow automatic crash reporting using Sentry (managed by Vít Skalický).
         * Allow only for official release builds.
         */
        buildConfigField "Boolean", "ALLOW_SENTRY", "false"
        multiDexEnabled true
        //changes apk name
        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "Lepší rozvrh v${versionName.replace('.','-')} ${variant.name}.apk"
            }
        }
    }
    signingConfigs {
        release {
            storeFile file(secretProperties.getProperty("signing_keystore_location"))
            storePassword secretProperties.getProperty("signing_keystore_password")
            keyAlias secretProperties.getProperty("signing_key_alias")
            keyPassword secretProperties.getProperty("signing_key_password")
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            buildConfigField "Boolean", "ALLOW_SENTRY", "false"
        }
    }
    flavorDimensions "version"
    productFlavors {
        /**
         * Use this flavour.
        */
        development {
            dimension "version"
        }
        /**
         * For official releases only (f-droid and github/gitlab). Allows crash reports using Sentry, which is managed by Vít Skalický.
         * Crashes from your testing are not welcome there.
         */
        official {
            dimension "version"
            buildConfigField "Boolean", "ALLOW_SENTRY", "true"
        }
        /**
         *  For Google play releases containing google in-app purchases only.
         *  Allows crash reports using Sentry, which is managed by Vít Skalický.
         *  Crashes from your testing are not welcome there.
         */
        play {
            dimension "version"
            buildConfigField "Boolean", "ALLOW_SENTRY", "true"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}

licenseReport {
    generateHtmlReport = true
    generateJsonReport = false

    // These options are ignored for Java projects
    copyHtmlReportToAssets = true
    copyJsonReportToAssets = false
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.volley:volley:1.1.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    testImplementation 'junit:junit:4.13-beta-3'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'org.simpleframework:simple-xml:2.7.1'
    implementation 'joda-time:joda-time:2.10.2'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'io.sentry:sentry-android:1.7.28'
    implementation 'org.slf4j:slf4j-nop:1.7.29'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.9.7'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.3"
    implementation 'com.jaredrummler:cyanea:1.0.2'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    def room_version = "2.2.6"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    def paging_version = "2.1.2"

    implementation "androidx.paging:paging-runtime:$paging_version"

    playImplementation 'com.android.billingclient:billing:2.2.1'

}
